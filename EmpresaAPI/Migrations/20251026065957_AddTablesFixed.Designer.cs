// <auto-generated />
using System;
using EmpresaAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EmpresaAPI.Migrations
{
    [DbContext(typeof(EmpresaContext))]
    [Migration("20251026065957_AddTablesFixed")]
    partial class AddTablesFixed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EmpresaAPI.Models.Cliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Usuario_Creacion_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Modificacion_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Usuario_Creacion_Id");

                    b.HasIndex("Usuario_Modificacion_Id");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Departamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Presupuesto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("Usuario_Creacion_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Modificacion_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Usuario_Creacion_Id");

                    b.HasIndex("Usuario_Modificacion_Id");

                    b.ToTable("Departamentos");
                });

            modelBuilder.Entity("EmpresaAPI.Models.DetalleVenta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int>("ProductoId")
                        .HasColumnType("int");

                    b.Property<int>("Producto_Id")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("Usuario_Creacion_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Modificacion_Id")
                        .HasColumnType("int");

                    b.Property<int>("VentaId")
                        .HasColumnType("int");

                    b.Property<int>("Venta_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductoId");

                    b.HasIndex("Usuario_Creacion_Id");

                    b.HasIndex("Usuario_Modificacion_Id");

                    b.HasIndex("VentaId");

                    b.ToTable("DetalleVentas");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Empleado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CUI")
                        .IsRequired()
                        .HasMaxLength(13)
                        .HasColumnType("nvarchar(13)");

                    b.Property<int>("DepartamentoId")
                        .HasColumnType("int");

                    b.Property<int>("Departamento_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Ingreso")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Ultimo_Aumento")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_baja")
                        .HasColumnType("datetime2");

                    b.Property<string>("Jerarquia")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Puesto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salario_Actual")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("Usuario_Creacion_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Modificacion_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("DepartamentoId");

                    b.HasIndex("Usuario_Creacion_Id");

                    b.HasIndex("Usuario_Modificacion_Id");

                    b.ToTable("Empleados");
                });

            modelBuilder.Entity("EmpresaAPI.Models.HistorialSalarial", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("Empleado_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Cambio")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Motivo")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<decimal>("Salario_Anterior")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("Salario_nuevo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("Usuario_Creacion_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Modificacion_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("Usuario_Creacion_Id");

                    b.HasIndex("Usuario_Modificacion_Id");

                    b.ToTable("HistorialSalarials");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Producto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Existencia")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Precio")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("Usuario_Creacion_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Modificacion_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Usuario_Creacion_Id");

                    b.HasIndex("Usuario_Modificacion_Id");

                    b.ToTable("Productos");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Rol", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre_Rol")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Usuario_Creacion_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Modificacion_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Usuario_Creacion_Id");

                    b.HasIndex("Usuario_Modificacion_Id");

                    b.ToTable("Rols");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Contrasena")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EmpleadoId")
                        .HasColumnType("int");

                    b.Property<int>("Empleado_Id")
                        .HasColumnType("int");

                    b.Property<bool>("Estado")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Nombre_Usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RolId")
                        .HasColumnType("int");

                    b.Property<int>("Rol_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Creacion_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Modificacion_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EmpleadoId");

                    b.HasIndex("RolId");

                    b.HasIndex("Usuario_Creacion_Id");

                    b.HasIndex("Usuario_Modificacion_Id");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Venta", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int>("Cliente_Id")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha_Creacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("Fecha_Modificacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Fecha_Venta")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(10,2)");

                    b.Property<int?>("Usuario_Creacion_Id")
                        .HasColumnType("int");

                    b.Property<int?>("Usuario_Modificacion_Id")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Usuario_Creacion_Id");

                    b.HasIndex("Usuario_Modificacion_Id");

                    b.ToTable("Ventas");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Cliente", b =>
                {
                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Creacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Modificacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Modificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Usuario_Creacion");

                    b.Navigation("Usuario_Modificacion");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Departamento", b =>
                {
                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Creacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Modificacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Modificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Usuario_Creacion");

                    b.Navigation("Usuario_Modificacion");
                });

            modelBuilder.Entity("EmpresaAPI.Models.DetalleVenta", b =>
                {
                    b.HasOne("EmpresaAPI.Models.Producto", "Producto")
                        .WithMany("DetallesVentas")
                        .HasForeignKey("ProductoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Creacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Modificacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Modificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmpresaAPI.Models.Venta", "Venta")
                        .WithMany("DetallesVentas")
                        .HasForeignKey("VentaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Producto");

                    b.Navigation("Usuario_Creacion");

                    b.Navigation("Usuario_Modificacion");

                    b.Navigation("Venta");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Empleado", b =>
                {
                    b.HasOne("EmpresaAPI.Models.Departamento", "Departamento")
                        .WithMany("Empleados")
                        .HasForeignKey("DepartamentoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Creacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Modificacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Modificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Departamento");

                    b.Navigation("Usuario_Creacion");

                    b.Navigation("Usuario_Modificacion");
                });

            modelBuilder.Entity("EmpresaAPI.Models.HistorialSalarial", b =>
                {
                    b.HasOne("EmpresaAPI.Models.Empleado", "Empleado")
                        .WithMany("HistorialesSalariales")
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Creacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Modificacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Modificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empleado");

                    b.Navigation("Usuario_Creacion");

                    b.Navigation("Usuario_Modificacion");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Producto", b =>
                {
                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Creacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Modificacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Modificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Usuario_Creacion");

                    b.Navigation("Usuario_Modificacion");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Rol", b =>
                {
                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Creacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Modificacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Modificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Usuario_Creacion");

                    b.Navigation("Usuario_Modificacion");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Usuario", b =>
                {
                    b.HasOne("EmpresaAPI.Models.Empleado", "Empleado")
                        .WithMany()
                        .HasForeignKey("EmpleadoId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpresaAPI.Models.Rol", "Rol")
                        .WithMany("Usuarios")
                        .HasForeignKey("RolId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Creacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Modificacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Modificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Empleado");

                    b.Navigation("Rol");

                    b.Navigation("Usuario_Creacion");

                    b.Navigation("Usuario_Modificacion");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Venta", b =>
                {
                    b.HasOne("EmpresaAPI.Models.Cliente", "Cliente")
                        .WithMany("Ventas")
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Creacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Creacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("EmpresaAPI.Models.Usuario", "Usuario_Modificacion")
                        .WithMany()
                        .HasForeignKey("Usuario_Modificacion_Id")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.Navigation("Cliente");

                    b.Navigation("Usuario_Creacion");

                    b.Navigation("Usuario_Modificacion");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Cliente", b =>
                {
                    b.Navigation("Ventas");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Departamento", b =>
                {
                    b.Navigation("Empleados");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Empleado", b =>
                {
                    b.Navigation("HistorialesSalariales");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Producto", b =>
                {
                    b.Navigation("DetallesVentas");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Rol", b =>
                {
                    b.Navigation("Usuarios");
                });

            modelBuilder.Entity("EmpresaAPI.Models.Venta", b =>
                {
                    b.Navigation("DetallesVentas");
                });
#pragma warning restore 612, 618
        }
    }
}
